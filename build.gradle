buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

version = minecraft_version + '-' + xlfoodmod_version
group = 'com.onelemonyboi.xlfoodmod' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'xlfoodmod'

repositories {
    maven { name = "jei"
        url =  "https://dvs1.progwml6.com/files/maven" }

    maven {
        url "https://www.cursemaven.com"
    }
}

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

sourceSets {
    api
    main {
        compileClasspath += sourceSets.api.output
        runtimeClasspath += sourceSets.api.output
        resources {
            srcDir 'src/generated/resources'
        }
    }
}

configurations {
    apiImplementation.extendsFrom(implementation)
    apiRuntimeOnly.extendsFrom(runtimeOnly)
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("curse.maven:the-one-probe-245211:3430022")
    implementation fg.deobf("curse.maven:jei-238222:3474326")
    implementation fg.deobf("curse.maven:jade-324717:3468298")              // WAILA Fork
}

minecraft {
    mappings channel: 'official', version: "${minecraft_version}"

    //accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                xlfoodmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                xlfoodmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'xlfoodmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                xlfoodmod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

javadoc {
    source = [sourceSets.main.allJava, sourceSets.api.allJava]
    // prevent java 8's strict doclint for javadocs from failing builds
    options.addStringOption('Xdoclint:none', '-quiet')
}

jar {
    manifest.attributes([
        "Specification-Title": "XLFoodMod",
        "Specification-Vendor": "onelemonyboi",
        "Specification-Version": project.version,
        "Implementation-Title": project.name,
        "Implementation-Version": project.version,
        "Implementation-Vendor": "onelemonyboi",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
}

artifacts {
    archives jar
}

repositories {
    maven {
        url "file://${project.projectDir}/mcmodsrepo"
    }
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
            artifact jar
        }
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
        for (String excludeDirName in ["run", "out", "output", "logs", "gradle"]) {
            File excludeDir = new File(projectDir, excludeDirName)
            excludeDirs.add(excludeDir)
        }
    }
}
